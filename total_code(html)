<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <title>Personal Task Manager</title>
    <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
    <style>
      body { margin: 0; font-family: sans-serif; background: #f9f9f9; }
    </style>
  </head>
  <body>
    <div id="root"></div>
    <script type="text/javascript">
      const { useState } = React;

      function App() {
        const [tasks, setTasks] = useState([]);
        const [input, setInput] = useState('');
      
        function handleAddTask(e) {
          e.preventDefault();
          if (!input.trim()) return;
          setTasks([
            ...tasks,
            { id: Date.now(), text: input.trim(), completed: false },
          ]);
          setInput('');
        }
      
        function handleToggleTask(id) {
          setTasks(tasks.map((task) =>
            task.id === id ? { ...task, completed: !task.completed } : task
          ));
        }
      
        function handleDeleteTask(id) {
          setTasks(tasks.filter((task) => task.id !== id));
        }
      
        return React.createElement('div', {
            style: {
              maxWidth: '400px',
              margin: '40px auto',
              padding: '16px',
              border: '1px solid #ccc',
              borderRadius: '8px',
              background: '#fff'
            }
          },
          React.createElement('h2', null, 'Personal Task Manager'),
          React.createElement('form', { onSubmit: handleAddTask },
            React.createElement('input', {
              type: 'text',
              value: input,
              onChange: e => setInput(e.target.value),
              placeholder: 'Add a new task',
              style: { width: '70%', padding: '8px' }
            }),
            React.createElement('button', {
              type: 'submit',
              style: { padding: '8px 12px', marginLeft: '8px' }
            }, 'Add')
          ),
          React.createElement('ul', { style: { listStyle: 'none', padding: 0, marginTop: '16px' } },
            tasks.length === 0
              ? React.createElement('div', { style: { color: '#888', marginTop: '10px' } }, 'No tasks yet!')
              : tasks.map(task =>
                React.createElement('li', {
                  key: task.id,
                  style: { marginBottom: '12px', display: 'flex', alignItems: 'center' }
                },
                  React.createElement('input', {
                    type: 'checkbox',
                    checked: task.completed,
                    onChange: () => handleToggleTask(task.id)
                  }),
                  React.createElement('span', {
                    style: {
                      marginLeft: '8px',
                      textDecoration: task.completed ? 'line-through' : 'none'
                    }
                  }, task.text),
                  React.createElement('button', {
                    onClick: () => handleDeleteTask(task.id),
                    style: {
                      marginLeft: 'auto',
                      padding: '4px 8px',
                      background: '#ff6b6b',
                      color: '#fff',
                      border: 'none',
                      borderRadius: '4px',
                      cursor: 'pointer'
                    }
                  }, 'Delete')
                )
              )
          )
        );
      }

      const root = ReactDOM.createRoot(document.getElementById('root'));
      root.render(React.createElement(App));
    </script>
  </body>
</html>
